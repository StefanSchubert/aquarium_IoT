# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]

  # Aquametrics on Atlantis (Actuator)
  - job_name: 'spring-actuator'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 30s
    static_configs:
      - targets: ['atlantis:8080']
        labels:
          instance: 'Aquametric'

  # Atlantis aquametrics DS-Sensor
  - job_name: 'aquametrics-DS-Sensor'
    metrics_path: '/sensor/temp/ds18b20'
    scrape_interval: 300s
    static_configs:
      - targets: ['atlantis:8080']
        labels:
          sensor: 'ds18b20'

  # NodeExporter for the pis
  - job_name: 'Node-Exporter'
    scrape_interval: 60s
    static_configs:
      - targets: ['atlantis:9100']
        labels:
          instance: 'Atlantis Pi' 
