debug=false
server.port=8080
server.servlet.context-path=/
spring.application.name=aquaMetrics

logging.level.root=WARN
logging.level.de.bluewhale.iot=TRACE

# Each sensor has it's own device ID. You will find it as sub-folder here: /sys/bus/w1/devices
ds18b20.device.id=28-0319a2795781
# Here you can define a calibration offset. Meaning you have measures via the sensor and
# your analog meter. You found a difference? If so just set it as a correction offset here.
# Example value format: -0.5 or 0.8 / if setting is not available a default of 0.0 will be taken
ds18b20.device.calibration.offset=0.0

# Integration to SABI
# PRECONDITION: Sabi is only available within ipv6, so your pi and isp should have ipv6 connectivity
# The temperature readout will be submitted to a SABI REST endpoint
# Your require to have a login in SABI and to create an API-Key from your tank listing
# paste your API KEY in here. Your may also want to configure the report rate
# Notice that SABI accepts measurements only if at least one hour to last report have been past.
sabi.support.enabled=false
sabi.tank.temperature.api-key=<YOUR API KEY>
# every x hours (absolute values required no fraction / default is 4 hours)
sabi.tank.temperature.reportrate=1
sabi.temperature.api.endpoint=https://api.sabi-project.net:8080/api/aquarium_iot/temp_measurement

# add metrics
# Health check for cloud deployment
# https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html#production-ready-endpoints-enabling-endpoints
management.endpoints.enabled-by-default=false
management.endpoint.metrics.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.info.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoints.web.exposure.include=metrics,health,info,prometheus
# management.metrics.distribution.percentiles-histogram.http.server.requests=true